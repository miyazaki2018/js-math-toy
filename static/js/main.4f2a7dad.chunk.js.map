{"version":3,"sources":["lib/math-generator/index.js","logo.svg","Module/PreviewFormula/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","operator","add","subtract","multiply","divide","flag","ignoreNegativeResults","showResults","showVerboseLog","config","leftDigits","rightDigits","minResultsDigits","maxResultsDigits","flags","generateFormula","returnFormula","calcTimes","filterLR","this","_filterByCondition","_randomIntegerInDigits","resultInteger","_resultInteger","lVal","rVal","resultIntegerDigits","_digitsInValueInteger","_stringFormula","console","log","leftInteger","rightInteger","temp","digits","curDigits","_randomInteger","_minIntegerInDigits","_maxIntegerInDigits","Math","pow","min","max","floor","random","valueInteger","curValue","__webpack_require__","p","PreviewFormula","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","formulas","_genForumlas","row","column","setState","react_default","a","createElement","width","_renderTable","i","rowContent","j","push","_genFormula","MG","map","columnContent","key","_this2","_renderRow","React","Component","App","className","Module_PreviewFormula","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f2a7dad.chunk.js","sourcesContent":["module.exports = {\n\n    operator: {\n        add:0,\n        subtract:1,\n        multiply:2,\n        divide:3\n    },\n\n    flag: {\n        ignoreNegativeResults:  true,//忽略负数结果\n        showResults:            false,//显示计算结果\n        showVerboseLog:         false,//显示中间日志结果\n    },\n\n    config: {\n        leftDigits: 1,\n        operator: 0,//add\n        rightDigits: 1,\n        minResultsDigits: 1,\n        maxResultsDigits: 2,\n        flags:{ignoreNegativeResults: true}\n    },\n\n    generateFormula: function(config) {\n        var returnFormula = '';\n        var MaxCalcTimes = 100;\n        var calcTimes = 0;\n\n        while(++calcTimes <= MaxCalcTimes) {\n            var filterLR = this._filterByCondition(this._randomIntegerInDigits(config.leftDigits), config.operator, this._randomIntegerInDigits(config.rightDigits), config.flags);\n            var resultInteger = this._resultInteger(filterLR.lVal,config.operator,filterLR.rVal);\n            var resultIntegerDigits = this._digitsInValueInteger(resultInteger);\n\n            if (resultIntegerDigits >= config.minResultsDigits && resultIntegerDigits <= config.maxResultsDigits) {\n                returnFormula = this._stringFormula(filterLR.lVal,config.operator,filterLR.rVal);\n                if (config.flags.showResults) {\n                    returnFormula += resultInteger;\n                }\n\n                if(config.flags.showVerboseLog) console.log(returnFormula);\n                break;\n            }\n        }\n\n        if (config.flags.showVerboseLog && calcTimes > MaxCalcTimes) console.log('error pararms to generate formula');\n\n        return returnFormula;\n    },\n\n    //根据标志位过滤结果\n    _filterByCondition: function(leftInteger,operator,rightInteger,flags) {\n        var lVal = leftInteger;\n        var rVal = rightInteger;\n\n        if (operator === this.operator.subtract && (flags.ignoreNegativeResults)) {\n            if (lVal < rVal) {\n                var temp = lVal;\n                lVal = rVal;\n                rVal = temp;\n            }\n        }\n\n        return {\n            lVal:lVal,\n            rVal:rVal\n        };\n    },\n\n    //位数生成\n    _randomIntegerInDigits: function(digits) {\n\n        var MinDigits = 1;\n        var MaxDigits = 10;\n        var curDigits = 0;\n\n        if (digits < MinDigits) {\n            curDigits = MinDigits;\n        }\n        else if (digits > MaxDigits) {\n            curDigits = MaxDigits;\n        }\n        else {\n            curDigits = digits;\n        }\n\n        return this._randomInteger(\n                this._minIntegerInDigits(curDigits),\n                this._maxIntegerInDigits(curDigits));\n    },\n\n    //指定位数的最大数值\n    _maxIntegerInDigits: function(digits) {\n        return Math.pow(10,digits) - 1;\n    },\n\n    //指定位数的最小数值\n    _minIntegerInDigits: function(digits) {\n        if(digits === 1) {\n            return 0; \n        }\n        return Math.pow(10,digits-1);\n    },\n\n    //指定范围的随机数值\n    _randomInteger: function(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\n    },\n\n    //计算数值结果\n    _resultInteger: function(leftInteger,operator,rightInteger) {\n        var resultInteger = 0;\n        if(operator === this.operator.add) {\n            resultInteger = leftInteger + rightInteger;\n        }\n        else if (operator === this.operator.subtract) {\n            resultInteger = leftInteger - rightInteger;\n        }\n        else if (operator === this.operator.multiply) {\n            resultInteger = leftInteger * rightInteger;\n        }\n        else if (operator === this.operator.divide) {\n            resultInteger = leftInteger / rightInteger;\n        }\n        else {\n            resultInteger = 0;\n        }\n        return resultInteger;\n    },\n\n    //计算数值的位数\n    _digitsInValueInteger: function(valueInteger) {\n        var curValue = valueInteger;\n        var curDigits = 0;\n        do {\n            curValue /= 10;\n            curDigits++;\n        }\n        while(curValue >= 1);\n        return curDigits;\n    },\n\n    //产生算式字符串\n    _stringFormula: function(leftInteger,operator,rightInteger) {\n        var returnFormula = '';\n        if(operator === this.operator.add) {\n            returnFormula = leftInteger + ' + ' + rightInteger + ' = ';\n        }\n        else if (operator === this.operator.subtract) {\n            returnFormula = leftInteger + ' - ' + rightInteger + ' = ';\n        }\n        else if (operator === this.operator.multiply) {\n            returnFormula = leftInteger + ' x ' + rightInteger + ' = ';\n        }\n        else if (operator === this.operator.divide) {\n            returnFormula = leftInteger + ' ÷ ' + rightInteger + ' = ';\n        }\n        else {\n            returnFormula = '';\n        }\n        return returnFormula;\n    }\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport T from 'prop-types'\n\nimport MG from '../../lib/math-generator'\n\n\nclass PreviewFormula extends React.Component {\n\n    static propTypes = {\n        row:    T.number,\n        column: T.number,\n    }\n\n    constructor(props) {\n      super(props);\n      this.state = { formulas:[]};\n    }\n\n    componentDidMount() {\n        var formulas = this._genForumlas(this.props.row, this.props.column);\n        this.setState({\n            formulas: formulas\n        })\n    }\n\n    render() {\n        const formulas = this.state.formulas;\n        return (\n            <div>\n                <table width=\"100%\" >\n                    <tbody>{this._renderTable(formulas)}</tbody>\n                </table>\n            </div>\n        );\n    }\n\n    _genForumlas(row, column) {\n        var formulas = [];\n        for(var i=0; i<row; i++) {\n            var rowContent = []\n            for(var j=0; j<column; j++) {\n                rowContent.push(this._genFormula())\n            }\n            formulas.push(rowContent)\n        }\n        return formulas;\n    }\n\n    _genFormula() {\n        var operator = MG.operator.add;\n        if (Math.floor(Math.random() * 2)) {operator = MG.operator.subtract;}\n\n        return MG.generateFormula({\n            leftDigits: 2,\n            operator: operator,\n            rightDigits: 2,\n            minResultsDigits: 1,\n            maxResultsDigits: 2,\n            flags: {\n                ignoreNegativeResults:true,\n            }\n        });\n    }\n\n    _renderRow(rowContent) {\n        var rowMarup = rowContent.map((columnContent) => {\n            console.log('columnContent:'+columnContent)\n            return (\n                <td key={columnContent}>{columnContent}</td>\n            )\n        });\n        return rowMarup;\n    }\n\n    _renderTable(formulas) {\n        var formulasMarkup = formulas.map((rowContent) => {\n            return (\n                <tr key={rowContent}>{this._renderRow(rowContent)}</tr>\n            );\n        });\n        return formulasMarkup;\n    }\n  }\nexport default PreviewFormula;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PreviewFormula from './Module/PreviewFormula'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <PreviewFormula row={25} column={4} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}